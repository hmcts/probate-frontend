#!groovy
//noinspection GroovyUnusedAssignment
@Library("Infrastructure") _

//noinspection GroovyAssignabilityCheck
properties([
		parameters([
			choice(name: 'ENVIRONMENT', choices: 'sandbox\nsaat\nsprod\nnonprod\nprod', description: 'Environment where code should be build and deployed')
		])
])

List<LinkedHashMap<String, Object>> secrets = [

]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

String product = "probate"
String component = "frontend"
String slot = "sandbox"
String serviceName = "${product}-${component}-${env}"
String slotString = "-${slot}"
env.TEST_E2E_FRONTEND_URL = "${serviceName}${slotString}.service.core-compute-${params.ENVIRONMENT}.internal"

withParameterizedPipeline('nodejs', product, component, params.ENVIRONMENT, slot) {
  after('build') {
    sh '''
    yarn setup
    printenv '''
  }

  loadVaultSecrets(secrets)
  
}
